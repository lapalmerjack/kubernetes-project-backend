apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: backend
spec:
  replicas: 5
  selector:
    matchLabels:
      app: backend
  strategy:
    canary:
      steps:
        - setWeight: 25
        - pause:
            duration: 30s
        - setWeight: 50
        - analysis:
            templates:
              - templateName: cpu-usage
        - pause:
            duration: 30s
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: BACKEND/IMAGE
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 50
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: database-configuration
                  key: database.url
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: nats-config
                  key: nats.url
            - name: NATS_SUBJECT
              valueFrom:
                configMapKeyRef:
                  name: nats-config
                  key: nats.subject
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: telegram-secrets
                  key: bot-token
            - name: CHAT_ID
              valueFrom:
                secretKeyRef:
                  name: telegram-secrets
                  key: chat-id

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    beta.cloud.google.com/backend-config: '{"default" :"healthcheck"}'
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
      name: http
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: backend-monitor-metrics
  labels:
    release: "kube-prometheus-stack"
spec:
  selector:
    matchLabels:
      app: backend
  endpoints:
    - port: http
      interval: 30s
      scrapeTimeout: 10s
      path: "/actuator/prometheus"
